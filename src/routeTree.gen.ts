/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as GuestRouteRouteImport } from './routes/_guest/route'
import { Route as AuthedRouteRouteImport } from './routes/_authed/route'
import { Route as GuestIndexRouteImport } from './routes/_guest/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo.table'
import { Route as GuestRegisterRouteImport } from './routes/_guest/register'
import { Route as AuthedDashboardRouteImport } from './routes/_authed/dashboard'
import { Route as AuthedBucketsIndexRouteImport } from './routes/_authed/buckets/index'
import { Route as AuthedBucketsCreateRouteImport } from './routes/_authed/buckets/create'
import { Route as AuthedBucketsIdRouteImport } from './routes/_authed/buckets/$id'

const GuestRouteRoute = GuestRouteRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedRouteRoute = AuthedRouteRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestIndexRoute = GuestIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GuestRouteRoute,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestRegisterRoute = GuestRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => GuestRouteRoute,
} as any)
const AuthedDashboardRoute = AuthedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthedRouteRoute,
} as any)
const AuthedBucketsIndexRoute = AuthedBucketsIndexRouteImport.update({
  id: '/buckets/',
  path: '/buckets/',
  getParentRoute: () => AuthedRouteRoute,
} as any)
const AuthedBucketsCreateRoute = AuthedBucketsCreateRouteImport.update({
  id: '/buckets/create',
  path: '/buckets/create',
  getParentRoute: () => AuthedRouteRoute,
} as any)
const AuthedBucketsIdRoute = AuthedBucketsIdRouteImport.update({
  id: '/buckets/$id',
  path: '/buckets/$id',
  getParentRoute: () => AuthedRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/dashboard': typeof AuthedDashboardRoute
  '/register': typeof GuestRegisterRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/': typeof GuestIndexRoute
  '/buckets/$id': typeof AuthedBucketsIdRoute
  '/buckets/create': typeof AuthedBucketsCreateRoute
  '/buckets': typeof AuthedBucketsIndexRoute
}
export interface FileRoutesByTo {
  '/dashboard': typeof AuthedDashboardRoute
  '/register': typeof GuestRegisterRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/': typeof GuestIndexRoute
  '/buckets/$id': typeof AuthedBucketsIdRoute
  '/buckets/create': typeof AuthedBucketsCreateRoute
  '/buckets': typeof AuthedBucketsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authed': typeof AuthedRouteRouteWithChildren
  '/_guest': typeof GuestRouteRouteWithChildren
  '/_authed/dashboard': typeof AuthedDashboardRoute
  '/_guest/register': typeof GuestRegisterRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/_guest/': typeof GuestIndexRoute
  '/_authed/buckets/$id': typeof AuthedBucketsIdRoute
  '/_authed/buckets/create': typeof AuthedBucketsCreateRoute
  '/_authed/buckets/': typeof AuthedBucketsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/dashboard'
    | '/register'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/'
    | '/buckets/$id'
    | '/buckets/create'
    | '/buckets'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/dashboard'
    | '/register'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/'
    | '/buckets/$id'
    | '/buckets/create'
    | '/buckets'
  id:
    | '__root__'
    | '/_authed'
    | '/_guest'
    | '/_authed/dashboard'
    | '/_guest/register'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/_guest/'
    | '/_authed/buckets/$id'
    | '/_authed/buckets/create'
    | '/_authed/buckets/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthedRouteRoute: typeof AuthedRouteRouteWithChildren
  GuestRouteRoute: typeof GuestRouteRouteWithChildren
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest/': {
      id: '/_guest/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GuestIndexRouteImport
      parentRoute: typeof GuestRouteRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest/register': {
      id: '/_guest/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof GuestRegisterRouteImport
      parentRoute: typeof GuestRouteRoute
    }
    '/_authed/dashboard': {
      id: '/_authed/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedDashboardRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
    '/_authed/buckets/': {
      id: '/_authed/buckets/'
      path: '/buckets'
      fullPath: '/buckets'
      preLoaderRoute: typeof AuthedBucketsIndexRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
    '/_authed/buckets/create': {
      id: '/_authed/buckets/create'
      path: '/buckets/create'
      fullPath: '/buckets/create'
      preLoaderRoute: typeof AuthedBucketsCreateRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
    '/_authed/buckets/$id': {
      id: '/_authed/buckets/$id'
      path: '/buckets/$id'
      fullPath: '/buckets/$id'
      preLoaderRoute: typeof AuthedBucketsIdRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
  }
}

interface AuthedRouteRouteChildren {
  AuthedDashboardRoute: typeof AuthedDashboardRoute
  AuthedBucketsIdRoute: typeof AuthedBucketsIdRoute
  AuthedBucketsCreateRoute: typeof AuthedBucketsCreateRoute
  AuthedBucketsIndexRoute: typeof AuthedBucketsIndexRoute
}

const AuthedRouteRouteChildren: AuthedRouteRouteChildren = {
  AuthedDashboardRoute: AuthedDashboardRoute,
  AuthedBucketsIdRoute: AuthedBucketsIdRoute,
  AuthedBucketsCreateRoute: AuthedBucketsCreateRoute,
  AuthedBucketsIndexRoute: AuthedBucketsIndexRoute,
}

const AuthedRouteRouteWithChildren = AuthedRouteRoute._addFileChildren(
  AuthedRouteRouteChildren,
)

interface GuestRouteRouteChildren {
  GuestRegisterRoute: typeof GuestRegisterRoute
  GuestIndexRoute: typeof GuestIndexRoute
}

const GuestRouteRouteChildren: GuestRouteRouteChildren = {
  GuestRegisterRoute: GuestRegisterRoute,
  GuestIndexRoute: GuestIndexRoute,
}

const GuestRouteRouteWithChildren = GuestRouteRoute._addFileChildren(
  GuestRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthedRouteRoute: AuthedRouteRouteWithChildren,
  GuestRouteRoute: GuestRouteRouteWithChildren,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
