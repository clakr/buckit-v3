/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as GuestRouteRouteImport } from './routes/_guest/route'
import { Route as AuthedRouteRouteImport } from './routes/_authed/route'
import { Route as GuestIndexRouteImport } from './routes/_guest/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo.table'
import { Route as GuestResetPasswordRouteImport } from './routes/_guest/reset-password'
import { Route as GuestRegisterRouteImport } from './routes/_guest/register'
import { Route as GuestForgotPasswordRouteImport } from './routes/_guest/forgot-password'
import { Route as AuthedDashboardRouteImport } from './routes/_authed/dashboard'
import { Route as AuthedBucketsRouteImport } from './routes/_authed/buckets'
import { Route as DemoFormSimpleRouteImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo.form.address'

const GuestRouteRoute = GuestRouteRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedRouteRoute = AuthedRouteRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestIndexRoute = GuestIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GuestRouteRoute,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestResetPasswordRoute = GuestResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => GuestRouteRoute,
} as any)
const GuestRegisterRoute = GuestRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => GuestRouteRoute,
} as any)
const GuestForgotPasswordRoute = GuestForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => GuestRouteRoute,
} as any)
const AuthedDashboardRoute = AuthedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthedRouteRoute,
} as any)
const AuthedBucketsRoute = AuthedBucketsRouteImport.update({
  id: '/buckets',
  path: '/buckets',
  getParentRoute: () => AuthedRouteRoute,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/buckets': typeof AuthedBucketsRoute
  '/dashboard': typeof AuthedDashboardRoute
  '/forgot-password': typeof GuestForgotPasswordRoute
  '/register': typeof GuestRegisterRoute
  '/reset-password': typeof GuestResetPasswordRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/': typeof GuestIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesByTo {
  '/buckets': typeof AuthedBucketsRoute
  '/dashboard': typeof AuthedDashboardRoute
  '/forgot-password': typeof GuestForgotPasswordRoute
  '/register': typeof GuestRegisterRoute
  '/reset-password': typeof GuestResetPasswordRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/': typeof GuestIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authed': typeof AuthedRouteRouteWithChildren
  '/_guest': typeof GuestRouteRouteWithChildren
  '/_authed/buckets': typeof AuthedBucketsRoute
  '/_authed/dashboard': typeof AuthedDashboardRoute
  '/_guest/forgot-password': typeof GuestForgotPasswordRoute
  '/_guest/register': typeof GuestRegisterRoute
  '/_guest/reset-password': typeof GuestResetPasswordRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/_guest/': typeof GuestIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/buckets'
    | '/dashboard'
    | '/forgot-password'
    | '/register'
    | '/reset-password'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/buckets'
    | '/dashboard'
    | '/forgot-password'
    | '/register'
    | '/reset-password'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/'
    | '/demo/form/address'
    | '/demo/form/simple'
  id:
    | '__root__'
    | '/_authed'
    | '/_guest'
    | '/_authed/buckets'
    | '/_authed/dashboard'
    | '/_guest/forgot-password'
    | '/_guest/register'
    | '/_guest/reset-password'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/_guest/'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthedRouteRoute: typeof AuthedRouteRouteWithChildren
  GuestRouteRoute: typeof GuestRouteRouteWithChildren
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest/': {
      id: '/_guest/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GuestIndexRouteImport
      parentRoute: typeof GuestRouteRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest/reset-password': {
      id: '/_guest/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof GuestResetPasswordRouteImport
      parentRoute: typeof GuestRouteRoute
    }
    '/_guest/register': {
      id: '/_guest/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof GuestRegisterRouteImport
      parentRoute: typeof GuestRouteRoute
    }
    '/_guest/forgot-password': {
      id: '/_guest/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof GuestForgotPasswordRouteImport
      parentRoute: typeof GuestRouteRoute
    }
    '/_authed/dashboard': {
      id: '/_authed/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedDashboardRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
    '/_authed/buckets': {
      id: '/_authed/buckets'
      path: '/buckets'
      fullPath: '/buckets'
      preLoaderRoute: typeof AuthedBucketsRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthedRouteRouteChildren {
  AuthedBucketsRoute: typeof AuthedBucketsRoute
  AuthedDashboardRoute: typeof AuthedDashboardRoute
}

const AuthedRouteRouteChildren: AuthedRouteRouteChildren = {
  AuthedBucketsRoute: AuthedBucketsRoute,
  AuthedDashboardRoute: AuthedDashboardRoute,
}

const AuthedRouteRouteWithChildren = AuthedRouteRoute._addFileChildren(
  AuthedRouteRouteChildren,
)

interface GuestRouteRouteChildren {
  GuestForgotPasswordRoute: typeof GuestForgotPasswordRoute
  GuestRegisterRoute: typeof GuestRegisterRoute
  GuestResetPasswordRoute: typeof GuestResetPasswordRoute
  GuestIndexRoute: typeof GuestIndexRoute
}

const GuestRouteRouteChildren: GuestRouteRouteChildren = {
  GuestForgotPasswordRoute: GuestForgotPasswordRoute,
  GuestRegisterRoute: GuestRegisterRoute,
  GuestResetPasswordRoute: GuestResetPasswordRoute,
  GuestIndexRoute: GuestIndexRoute,
}

const GuestRouteRouteWithChildren = GuestRouteRoute._addFileChildren(
  GuestRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthedRouteRoute: AuthedRouteRouteWithChildren,
  GuestRouteRoute: GuestRouteRouteWithChildren,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
